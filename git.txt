git快照，基于原有版本的基础上重新生成一份新的文件，类似于备份，如果文件没有修改，git不再重新储存该文件，而是只保留一个链接指向之前储存的文件
在git中的绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其他计算机的信息
git中有三个区域，分别是 工作区，暂存区，git仓库
git的三种状态：
已修改：表示修改了文件，但未将修改结果放到暂存区
已暂存：表示对修改的文件的当前版本做了标记，使之包含在下次提交的列表中
已提交：表示文件已安全保存在本地的git仓库中

工作区四种状态：
未跟踪（untracked）未修改（unmodified）已修改（modified）已暂存（staged）

缺点：占用磁盘空间
优点：版本切换时非常快
特点：
1.以空间换时间
2.断网后依旧可以在本地进行版本替换（只需要在联网后同步到服务端即可）
3.

指令：
git status 查看文件状态

git status -s 精简的查看文件

git add 1.跟踪新文件 2.把已跟踪，已修改的文件放到暂存区 3.把冲突文件标记为已解决状态
git add . 把所有修改、新增的文件 添加到暂存区内
新增的文件暂存在 绿色 M 表示暂存区内的文件被修改了 绿色A 表示文件被加入到了暂存区
M 红色表示文件已修改，但未放到暂存区， 绿色表示已修改并且放入到暂存区

git commit -m “提交消息” 将暂存区中记录的文件快照 提交到git仓库中
git commit -a -m 跳过暂存区，直接提交到git仓库中 简化工作流程 工作区 ——>git仓库

git checkout -- 文件名 把工作区中对应文件的修改，还原为git仓库中保存的版本
缺点：所有修改会丢失，且无法恢复

git reset HEAD 文件 从暂存区内移除对应的文件




